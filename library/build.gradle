apply plugin: 'android-library'
apply plugin: 'signing'

group 'it.sephiroth.android.library.horizontallistview'
version '1.2.1'

dependencies {
    compile 'com.android.support:support-v4:19.0.3+'
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    defaultConfig {
        versionCode 1
        versionName version
        minSdkVersion 9
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
}

task displayInfo() {
    doLast {
        logger.lifecycle "  project name: ${project.name} (root: ${rootProject.name})"
        logger.lifecycle "  project version: ${project.version}"
        logger.lifecycle "  project group: ${project.group}"
    }
}


project.ext.outJar = project.name + '-' + version + '.jar'

task clearJar(type: Delete) {
    delete 'build/libs/' + project.ext.outJar
}

task makeJar(type: Copy) {
    from('build/bundles/release/')
    into('build/libs/')
    include('classes.jar')
    rename('classes.jar', project.ext.outJar)
}

def generatePom() {
    def pom = pom {
        project {
            name 'HorizontalListView'
            groupId project.group
            artifactId project.name
            version project.version
            description 'Horizontal ListView for Android. Based on the official ListView google code.'
            inceptionYear '2013'
            url 'https://github.com/sephiroth74/HorizontalVariableListView'

            licenses {
                license {
                    name 'Apache License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0'
                    distribution 'repo'
                }
            }

            scm {
                url "https://github.com/sephiroth74/HorizontalVariableListView"
                connection "scm:git:git@github.com:sephiroth74/HorizontalVariableListView.git"
                developerConnection "scm:git:git@github.com:sephiroth74/HorizontalVariableListView.git"
            }


            developers {
                developer {
                    id 'sephiroth74'
                    name 'Alessandro Crugnola'
                    email 'alessandro.crugnola@gmail.com'
                    url 'http://blog.sephiroth.it'
                    roles {
                        role 'author'
                        role 'developer'
                    }
                }

                developer {
                    id 'hborders'
                    name 'Heath Borders'
                    url 'http://heath-tech.blogspot.com/'
                    roles {
                        role 'contributor'
                    }
                }
            }
        }
    }
}

task writePom {
    ext.pomXml = file("pom.xml")
    inputs.file(project.buildFile)
    outputs.file(pomXml)
    doLast {
        generatePom().writeTo(pomXml)
    }
}


uploadArchives {
    if (hasProperty('sonatypeUsername')) {
        repositories {
            mavenDeployer {
                beforeDeployment {
                    MavenDeployment deployment -> signing.signPom(deployment)
                }
                pom = generatePom()

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.allSource
}

signing {
    sign configurations.archives
}

artifacts {
    archives sourcesJar
}

clean.dependsOn(clearJar)
build.dependsOn(writePom, makeJar)
uploadArchives.dependsOn(build)
